1) decomposeHomographyMat
    Syntax:
        int cv::decomposeHomographyMat(
            InputArray              H,
            InputArray              K,
            OutputArrayOfArrays     rotations,
            OutputArrayOfArrays     translations,
            OutputArrayOfArrays     normals
        )
    Description: Decompose a homography matrix to rotation(s), translation(s) and plane normal(s).

2) cv::Rodrigues
    Syntax:
        void cv::Rodrigues(
            InputArray      src,
            OutputArray     dst,
            OutputArray     jacobian = noArray()
        )
    Description: converts a rotation matrix to a rotation vector or vice versa.

3) cv::BackgroundSubtractorMOG2
    Syntax:
        class cv::BackgroundSubtractorMOG2
    Description:
        Gaussian Mixture-based Background/Foreground Segmentation Algorithm.

4) cv::CascadeClassifier
    Syntax:
        class cv::CascadeClassifier
    Description: Cascade classifier class for object detection.

5) cv::CascadeClassifier::load
    Syntax:
        bool cv::CascadeClassifier::load(const String& filename)
    Description: Load a classifier from a file.

6) detectMultiScale
    Syntax:
        void cv::CascadeClassifier::detectMultiScale(
            InputArray              image,
            std::vector<Rect>&      objects,
            double                  scaleFactor = 1.1,
            int                     minNeighbors = 3,
            int                     flags = 0,
            Size                    minSize = Size(),
            Size                    maxSize = Size()
        )
    Description: detects objects of different sizes in the input image. The detected objects are returned as a list of rectangles.

7) readNet
    Syntax:
        [1/2]
            cv::Net cv::dnn::readNet(
                const String&  model,
                const String&  config = "",
                const String&  framework = ""
            )
        [2/2]
            cv::Net cv::dnn::readNet(
                const String& framework,
                const std::vector<uchar>&   bufferModel,
                const std::vector<uchar>&   bufferConfig = std::vector<uchar>()
            )
    Description: Read deep learning network represented in one of the supported formats.